services:
  - type: web
    name: tsla-dashboard
    env: node
    buildCommand: |
      # Clean environment
      echo 'Cleaning environment...'
      rm -rf node_modules package-lock.json .npmrc deploy
      npm cache clean --force
      
      # Install all dependencies
      echo 'Installing dependencies...'
      npm install --legacy-peer-deps
      
      # Build the frontend
      echo 'Building frontend...'
      npm run vite-build
      
      # Create deploy directory
      echo 'Preparing deployment...'
      mkdir -p deploy
      
      # Run the deployment script
      echo 'Running deployment script...'
      npm run prepare-deploy
      
      # Verify deployment
      echo 'Verifying deployment...'
      if [ ! -d "deploy/node_modules/express" ]; then
        echo 'ERROR: Express module not found in deploy directory!'
        echo 'Directory structure:'
        ls -la deploy
        echo '\nnode_modules contents:'
        ls -la deploy/node_modules || echo 'No node_modules found'
        exit 1
      fi
    
    startCommand: npm start
    
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: GEMINI_API_KEY
        fromDatabase:
          name: gemini-api-key
          property: value
      - key: FRONTEND_URL
        value: https://tsla-stock-dashboard.onrender.com
    
    plan: free
    autoDeploy: true
    healthCheckPath: /health
    
    # Configure build cache
    buildCache:
      paths:
        - node_modules
    
    # Configure build timeout (in seconds)
    buildTimeout: 600
